<h2>Static websites</h2>

<p>
  Percy makes it very simple to integrate visual diff testing with static websites, no matter where the site is hosted or what tools were used to generate it.
</p>
<p>
  This can be especially useful for static sites generated by <a href="http://jekyllrb.com/">Jekyll</a> (ie. for GitHub Pages), <a href="http://growsdk.org">Grow</a>, or any other static site generator.
</p>

<h3>Installation</h3>
<p>First, install the Percy command-line client:</p>

{{#code-block lang="bash"}}
$ gem install percy-cli
{{/code-block}}
<p>
  If you already have the client installed, you can update your old version by running:
</p>
{{#code-block lang="bash"}}
$ gem update percy-cli
{{/code-block}}

<h3>Usage</h3>
<p>
  If your static site exists in a directory called <code>_site</code>, it's as simple as this:
</p>

{{#code-block lang="bash"}}
$ percy snapshot _site/
{{/code-block}}

<p>That's it!</p>

<p>For example:</p>
{{#code-block lang="bash"}}
$ percy snapshot _site/
Creating build...
Uploading build resources...
Uploading snapshot (1/3): /index.html
Uploading snapshot (2/3): /404.html
Uploading snapshot (3/3): /about/index.html
Finalizing build...
Done! Percy is now processing, you can view the visual diffs here:
https://percy.io/fotinakis/percy-examples/builds/140
{{/code-block}}

<p>
  Under the hood, Percy only uploads files that have changed. So, after the first time this command is run, future runs will likely be very fast and only take a few seconds.
</p>

<h4>Limit pages for testing</h4>

<p>
  If you have a very large site, you might want to limit the number of pages that are actually uploaded to Percy while testing. You can pass the <code>snapshot_limit</code> flag to do this:
</p>

{{#code-block lang="bash"}}
$ percy snapshot _site/ --snapshot_limit 10
{{/code-block}}
